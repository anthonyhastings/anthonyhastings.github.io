// Outputs a media query for the selected breakpoint identifier.

@mixin bp($point) {
  @if $point == desktop-up {
    @media (min-width: map-get($bps, desktop-up)) {
      @content;
    }
  }
}

// Outputs a pseudo-element to create a scalable, fixed aspect ratio element.
// Simply apply your desired width to the parent element with no height set.

@mixin before-aspect-ratio-custom($padding-bottom: 100%) {
  &::before {
    content: '';
    display: block;
    height: 0;
    padding-bottom: $padding-bottom;
    width: 100%;
  }
}

// A short-handed way of looking up a colour within the nested colour map.
//
// Example Mapping:
// $color: (
//     caribbeanGreen: (
//         base: #00BFA5,
//         light: rgba(#00BFA5, 0.8)
//     )
// );
//
// Example Usage:
// background-color: palette(caribbeanGreen, base);

@function palette($palette, $tone: 'base') {
  @return map-get(map-get($palettes, $palette), $tone);
}
